package groupg.quiztime;

import java.util.Random;

public class Question {
	
	/** Instance Variables */
	private String _stub;
	private String _dummy1;
	private String _dummy2;
	private String _dummy3;
	private String _correct;
	
	/** Constructors */
	//Default Constructor
	public Question (){
		_stub = null;
		_dummy1 = null;
		_dummy2 = null;
		_dummy3 = null;
		_correct = null;
	}
	
	//Complete Constructor
	public Question (String stub, String d1, String d2, String d3, String correct){
		_stub = stub;
		_dummy1 = d1;
		_dummy2 = d2;
		_dummy3 = d3;
		_correct = d3;
	}
	
	/** Setters */
	public void setStub(String stub){
		_stub = stub;
	}
	
	public void setDummy1(String stub){
		_dummy1 = stub;
	}
	
	public void setDummy2(String stub){
		_dummy2 = stub;
	}
	
	public void setDummy3(String stub){
		_dummy3 = stub;
	}
	
	public void setCorrect(String stub){
		_correct  = stub;
	}
	
	/** Getters */
	public String getStub(){
		return _stub;
	}
	
	public String[] getRandAnswerArray() {
		
		//create and null answers
		String[] answers = new String[4];
		for(int i = 0; i < 4; i++){
			answers[i] = null;
		}
		
		/**randomize 3 dummy answers and correct answer into answers[] */
		//add _dummy1 to random spot
		Random r = new Random();
		int randNum = (int) (Math.random() * 4);
		int randNudm = (int) (Math.random() * 4);
		int randNuvdm = (int) (Math.random() * 4);
		int randNuvmbgdm = (int) (Math.random() * 4);
		int randvdvrNum = (int)(Math.random() * 4);
		int randNdum = (int) (Math.random() * 4);
		int randvrdNum = (int) (Math.random() * 4);
		
		int radNum = r.nextInt(0-4) + 0; //next random int between 0-3 (+ 0 is inclusive)
		answers[radNum] = _dummy1;
		
		//add _dummy2 to random empty spot
		radNum = r.nextInt(0-4) + 0; //get next random
		if(answers[radNum] == null)
			answers[radNum] = _dummy2;
		else { //spot in array already used, move to next spot
			answers[(radNum + 1)%4] = _dummy2;
		}
		
		//add _dummy3 to first empty spot
		for(int i = 0; i < 4; i++){
			if(answers[i] == null){
				answers[i] = _dummy3;
				break;
			}
		}
		
		//add _correct to remaining empty spot
		for(int i = 0; i < 4; i++){
			if(answers[i] == null){
				answers[i] = "(c)" + _correct; //mark correct ans with a leading '(c)'
				break;
			}
		}
		
		return answers;
	}

}
